#!/usr/bin/env python3

"""Print foreign exchange market rate declared by the Czech National Bank.

Format of the foreign exchange market rates:
https://www.cnb.cz/en/faq/Format-of-the-foreign-exchange-market-rates/

Further details:
https://www.cnb.cz/en/financial-markets/foreign-exchange-market/central-bank-exchange-rate-fixing/central-bank-exchange-rate-fixing/

TODO:
    * With effect from 2 March 2022, the CNB has suspended the publication
      of the exchange rate of the Russian rouble (RUB).
"""

import argparse
import os
import re
import sys
import textwrap
import urllib.request
from datetime import date, datetime
from typing import Dict
from urllib.error import URLError


def parse(data: str) -> Dict[str, str]:
    """Return FX rates from data as dict.

    Supports only the format provided by the Czech National Bank.

    Returns: dict(currency_code: str, fx_rate: str)
    """
    fx_rates = {}
    for line in data.split("\n")[2:]:  # skip ID and header lines
        if line == "":
            # If data ends with newline, the last line is empty.
            continue
        fields = line.split("|")
        fx_rates[fields[-2]] = fields[-1]
    return fx_rates


def fetch_data(url: str) -> str:
    """Return text data from URL as an UTF-8 string."""
    try:
        with urllib.request.urlopen(url) as response:
            data = response.read().decode("utf-8")
        return data
    except URLError as error:
        print(f"error: {error.reason}", file=sys.stderr)
        sys.exit(1)


def main():
    """Script entry point"""

    #
    # parse args
    #

    parser = argparse.ArgumentParser(
        formatter_class=argparse.RawDescriptionHelpFormatter,
        epilog=textwrap.dedent(
            """
            environment variables:
              FXRATES_URL custom url to a file containing FX rates, e.g. file:///path/to/daily.txt
            """
        ),
    )
    parser.add_argument("currency", help="currency ISO code, e.g. USD")
    parser.add_argument(
        "date",
        nargs="?",
        help="optional date in ISO format, e.g. 2022-01-01; default: today",
    )
    args = parser.parse_args()

    #
    # check values of args
    #

    valid_currencies = [
        "AUD",
        "BGN",
        "BRL",
        "CAD",
        "CHF",
        "CNY",
        "DKK",
        "EUR",
        "GBP",
        "HKD",
        "HRK",
        "HUF",
        "IDR",
        "ILS",
        "INR",
        "ISK",
        "JPY",
        "KRW",
        "MXN",
        "MYR",
        "NOK",
        "NZD",
        "PHP",
        "PLN",
        "RON",
        "RUB",
        "SEK",
        "SGD",
        "THB",
        "TRY",
        "USD",
        "XDR",
        "ZAR",
    ]
    if args.currency not in valid_currencies:
        print(
            f"error: invalid currency code '{args.currency}';"
            f" valid codes: {' '.join(valid_currencies)}",
            file=sys.stderr,
        )
        sys.exit(1)

    if args.date:
        try:
            date.fromisoformat(args.date)
        except ValueError as error:
            print(f"error: {error}", file=sys.stderr)
            sys.exit(1)
        if date.fromisoformat(args.date) > date.today():
            print(
                f"error: invalid date '{args.date}', date must be =< today date",
                file=sys.stderr,
            )
            sys.exit(1)
    if not args.date or date.fromisoformat(args.date) == date.today():
        now = datetime.now()
        update_time = now.replace(hour=14, minute=30, second=0, microsecond=0)
        if date.today().weekday() not in (5, 6) and now < update_time:
            print(
                "warning: exchange rates are declared every working day after"
                " 2.30 p.m. and are valid for the current working day and,"
                " where relevant, the following Saturday, Sunday or public"
                " holiday",
                file=sys.stderr,
            )

    #
    # print FX rate
    #

    default_url = "https://www.cnb.cz/en/financial-markets/foreign-exchange-market/central-bank-exchange-rate-fixing/central-bank-exchange-rate-fixing/daily.txt"  # pylint: disable=line-too-long
    custom_url = os.getenv("FXRATES_URL")
    url = custom_url if custom_url else default_url
    if args.date:
        # add URL query '?date=DD.MM.YYYY'
        url += f"?date={date.fromisoformat(args.date).strftime('%d.%m.%Y')}"

    fx_rates: Dict[str, str] = parse(fetch_data(url))
    rate: str = fx_rates[args.currency]
    re_decimal = r"^\d+\.\d{3}$"
    if not re.match(re_decimal, rate):
        print(
            f"error: internal error: parsed FX rate '{rate}' violates"
            f" the expected format '{re_decimal}'.",
            file=sys.stderr,
        )
        sys.exit(1)
    print(rate)


if __name__ == "__main__":
    main()
