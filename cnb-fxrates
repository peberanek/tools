#!/usr/bin/env bash
#
# Get foreign exchange market rates declared by the Czech National Bank
# (https://www.cnb.cz/en/financial-markets/foreign-exchange-market/central-bank-exchange-rate-fixing/central-bank-exchange-rate-fixing/).
#

set -o errexit


prog_name="${0##*/}"
help_msg="
${prog_name} - get foreign exchange market rates declared by the Czech National Bank.

usage: ${prog_name} CURRENCY [DATE]

Get CURRENCY (in ISO format, e.g. EUR) exchange rate to CZK for the given DATE.
If DATE is not specified, the latest exchange rate is used instead. Supports
the same DATE formats as the \`date\` command from GNU coreutils.

Examples:

    Get USD-CZK exchange rate valid for January 1, 2022.
    $ ${prog_name} USD 2022-01-01

    Get EUR-CZK exchange rate valid for the current date.
    $ ${prog_name} EUR

Environment variables:

    CNB_FXRATES_URL: URL to the file with foreign exchange market rates data.
        Used primarily for testing.
"
url="${CNB_FXRATES_URL:-https://www.cnb.cz/en/financial-markets/foreign-exchange-market/central-bank-exchange-rate-fixing/central-bank-exchange-rate-fixing/daily.txt}"
currency="${1}"
my_date="${2:-$(date --iso-8601)}"  # If date is not provided, use current date.

if [[ ${#} -eq 0 || ${#} -gt 2 ]]; then
    echo "Error: Invalid number of arguments. See usage." >&2
    echo "${help_msg}"
    exit 1
fi

# URL parameter requires date format DD.MM.YYYY
data=$(curl -s "${url}?date=$(date --date "${my_date}" '+%d.%m.%Y')")
if [[ ! "${data}" ]]; then
    echo "Error: Date set to '${my_date}'. Couldn't fetch ${url}." >&2
    exit 1
fi

fx_rate=$(echo "${data}" | tail -n+3 | grep "${currency}" | cut -d'|' -f5)
if [[ ! "${fx_rate}" ]]; then
    echo "Error: Found no foreign exchange market rate for the currency code \
'${currency}' and date '${my_date}'." >&2
    exit 1
else
    echo "${fx_rate}"
fi
